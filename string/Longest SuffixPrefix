//PROBLEM STATEMENT-

Given a string of characters, find the length of the longest proper prefix which is also a proper suffix.

Example 1:

Input: s = "abab"
Output: 2
Explanation: "ab" is the longest proper 
prefix and suffix. 
Example 2:

Input: s = "aaaa"
Output: 3
Explanation: "aaa" is the longest proper 
prefix and suffix. 

SOURCE CODE-
//Use preprocessing algorithm of KMP

#include <bits/stdc++.h>
using namespace std;

class Solution{
public:		

		
	int lps(string s)
	{
	    // Your code goes here
	    int n=s.size();
	    int lps[n];
	    lps[0]=0;
	    int len=0;
	    int i=1;
	    while(i<n)
	    {
	        if(s[len]==s[i])
	        {
	            len++;
	            lps[i]=len;
	            i++;
	        }
	        else if(s[len]!=s[i])
	        {
	            if(len!=0)
	                len = lps[len-1];
	            else if(len==0)
	            {
	                lps[i] = 0;
	                i++;
	            }
	        }
	    }
	    int res=-1;
	    for(int i=0;i<n;i++)
	        res= max(res,lps[i]);
	    return lps[n-1];
	}
};


int main() 
{
  
   	ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
   
   	int t;
   	cin >> t;
   	while(t--)
   	{
   		string str;
   		cin >> str;

   		Solution ob;

   		cout << ob.lps(str) << "\n";
   	}

    return 0;
}  
